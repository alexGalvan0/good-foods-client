[{"/workspace/good-movies-client/good-movies/pages/about.jsx":"1","/workspace/good-movies-client/good-movies/pages/login.jsx":"2","/workspace/good-movies-client/good-movies/pages/movie/[imdbID].jsx":"3","/workspace/good-movies-client/good-movies/pages/movie/search.jsx":"4","/workspace/good-movies-client/good-movies/pages/profile.jsx":"5","/workspace/good-movies-client/good-movies/pages/register.jsx":"6","/workspace/good-movies-client/good-movies/pages/user/[id].jsx":"7","/workspace/good-movies-client/good-movies/components/about/Hero.jsx":"8","/workspace/good-movies-client/good-movies/components/about/Home.jsx":"9","/workspace/good-movies-client/good-movies/components/follows/FollowCard.jsx":"10","/workspace/good-movies-client/good-movies/components/login/GoogleLogin.jsx":"11","/workspace/good-movies-client/good-movies/components/login/LoginForm.jsx":"12","/workspace/good-movies-client/good-movies/components/login/SignIn.jsx":"13","/workspace/good-movies-client/good-movies/components/modals/LoginModal.jsx":"14","/workspace/good-movies-client/good-movies/components/movies/ButtonGroup.jsx":"15","/workspace/good-movies-client/good-movies/components/movies/MovieCard.jsx":"16","/workspace/good-movies-client/good-movies/components/nav/BottomNav.jsx":"17","/workspace/good-movies-client/good-movies/components/nav/FloatingActionButton.jsx":"18","/workspace/good-movies-client/good-movies/components/nav/ImageAvatars.jsx":"19","/workspace/good-movies-client/good-movies/components/nav/MenuAppBar.jsx":"20","/workspace/good-movies-client/good-movies/components/nav/Nav.jsx":"21","/workspace/good-movies-client/good-movies/components/nav/SnackBar.jsx":"22","/workspace/good-movies-client/good-movies/components/nav/SnackBarRegister.jsx":"23","/workspace/good-movies-client/good-movies/components/register/RegisterForm.jsx":"24","/workspace/good-movies-client/good-movies/components/search/Toggle.jsx":"25","/workspace/good-movies-client/good-movies/pages/_app.js":"26","/workspace/good-movies-client/good-movies/pages/index.js":"27"},{"size":378,"mtime":1670530261000,"results":"28","hashOfConfig":"29"},{"size":600,"mtime":1670530261000,"results":"30","hashOfConfig":"29"},{"size":1877,"mtime":1670518464000,"results":"31","hashOfConfig":"29"},{"size":5028,"mtime":1670530261000,"results":"32","hashOfConfig":"29"},{"size":8182,"mtime":1670530261000,"results":"33","hashOfConfig":"29"},{"size":445,"mtime":1670512600000,"results":"34","hashOfConfig":"29"},{"size":2549,"mtime":1670530261000,"results":"35","hashOfConfig":"29"},{"size":1266,"mtime":1670512600000,"results":"36","hashOfConfig":"29"},{"size":1184,"mtime":1670512600000,"results":"37","hashOfConfig":"29"},{"size":1356,"mtime":1670530261000,"results":"38","hashOfConfig":"29"},{"size":1176,"mtime":1670512600000,"results":"39","hashOfConfig":"29"},{"size":2050,"mtime":1670512600000,"results":"40","hashOfConfig":"29"},{"size":3139,"mtime":1670512600000,"results":"41","hashOfConfig":"29"},{"size":1570,"mtime":1670512600000,"results":"42","hashOfConfig":"29"},{"size":1911,"mtime":1670530261000,"results":"43","hashOfConfig":"29"},{"size":983,"mtime":1670512600000,"results":"44","hashOfConfig":"29"},{"size":2430,"mtime":1670512600000,"results":"45","hashOfConfig":"29"},{"size":596,"mtime":1670512600000,"results":"46","hashOfConfig":"29"},{"size":444,"mtime":1670512600000,"results":"47","hashOfConfig":"29"},{"size":2794,"mtime":1670512600000,"results":"48","hashOfConfig":"29"},{"size":1895,"mtime":1670530261000,"results":"49","hashOfConfig":"29"},{"size":1085,"mtime":1670512600000,"results":"50","hashOfConfig":"29"},{"size":1236,"mtime":1670512600000,"results":"51","hashOfConfig":"29"},{"size":3647,"mtime":1670530261000,"results":"52","hashOfConfig":"29"},{"size":919,"mtime":1670512600000,"results":"53","hashOfConfig":"29"},{"size":3511,"mtime":1670557683265,"results":"54","hashOfConfig":"29"},{"size":133,"mtime":1670530261000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2co9mk",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/good-movies-client/good-movies/pages/about.jsx",[],[],"/workspace/good-movies-client/good-movies/pages/login.jsx",[],[],"/workspace/good-movies-client/good-movies/pages/movie/[imdbID].jsx",["148","149"],[],"import { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\n\n\nimport useUser from \"../../hooks/useUser\"\nimport ButtonGroup from '../../components/movies/ButtonGroup';\nimport axios from 'axios';\n\n\nfunction MovieProfile({mData, uData}) {\n    const API_KEY = process.env.NEXT_PUBLIC_API_KEY\n\n    const router = useRouter();\n\n    const [movieData, setMovieData] = useState({})\n\n\n    const { imdbID } = router.query;\n \n    useEffect(() => {\n        const req = async () => {\n            let url = `https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}`\n            const data = axios.get(url)\n            const response = await data\n            setMovieData(response.data)\n        }\n        req()\n\n    }, [])\n\n\n    mData = movieData\n    uData = useUser()\n    return (\n        <div className=\"container rounded bg-primary my-5 text-center text-lg-start mb-5 pb-5\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"media\">\n                        <img src={movieData.Poster} className=\"mr-3\" alt=\"movie\" />\n                        <div className=\"media-body\">\n                            <h3 className=\"bold mt-2 text-light\">{movieData.Title}</h3>\n                            <p className='text-light'>Plot: {movieData.Plot}</p>\n                            <p className='text-light'>Director: {movieData.Director}</p>\n                            <p className='text-light'>Rated: {movieData.Rated}</p>\n                            <p className='text-light'>Released: {movieData.Released}</p>\n                            <p className='text-light'>Runtime: {movieData.Runtime}</p>\n                        </div>\n                    </div>\n                    <ButtonGroup mData={mData} uData={uData} />\n                </div>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default MovieProfile;\n\n","/workspace/good-movies-client/good-movies/pages/movie/search.jsx",["150"],[],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport Toggle from \"../../components/search/Toggle\";\nimport Link from \"next/link\";\nimport Button from \"@mui/material/Button\";\nimport useUser from \"../../hooks/useUser\";\nimport { Container } from \"@mui/system\";\nimport { useRouter } from \"next/router\";\n\n\nfunction MovieSearch() {\n  const route = useRouter();\n  const user = useUser();\n  const API_KEY = process.env.NEXT_PUBLIC_API_KEY;\n  const OMDB_URL = \"https://www.omdbapi.com/\";\n  const BASE_URL =\n    \"https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/\";\n\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const [searchType, setSearchType] = useState(\"movie\");\n  const [movieResults, setMovieResults] = useState(false);\n  const [userResults, setUserResults] = useState(false);\n  let title = search.replaceAll(\" \", \"+\");\n\n  const getMovies = async () => {\n    let req = axios.get(\n      `${OMDB_URL}?apikey=${API_KEY}&s=${title}&type=movie&page=1`\n    );\n    let resp = await req;\n    setData(resp.data.Search);\n  };\n  const getSearch = (e) => {\n    setSearch(e.target.value);\n  };\n  const results = () => {\n    setMovieResults(true);\n  };\n\n  const getFriends = async () => {\n    try{\n      let lowerSearch = search.toLowerCase()\n      let req = axios.get(`${BASE_URL}getUserByUsername/${lowerSearch}`);\n      let resp = await req;\n      setData(resp.data);\n    } catch {\n      setData('no user found')\n    }\n  };\n\n  const displayResult = () => {\n    if (searchType === \"movie\" && search != '') {\n      try{\n        getMovies();\n        results();\n      } catch {\n        alert ('Movie Not Found')\n      }\n    \n\n    }\n    if (searchType === \"user\") {\n      getFriends();\n    }\n  };\n\n  const followFriend = async () => {\n    let username = data.username;\n    let req = axios.post(`${BASE_URL}follow/${user.id}/${username}/`);\n    let resp = await req;\n    route.push(\"../profile\");\n  };\n\n  return (\n    <div className=\"container bg-dark mt-3 pt-3\">\n      <div className=\"row pb-3\">\n        <div className=\"col col-lg-4\">\n          <Toggle setSearchType={setSearchType} />\n          <input\n            type=\"search\"\n            onChange={getSearch}\n            value={search}\n            className=\"form-control form-control-dark text-bg-light mb-3\"\n            placeholder=\"Search...\"\n            aria-label=\"Search\"\n          />\n          <Button\n            sx={{ bgcolor: \"primary.main\" }}\n            color=\"secondary\"\n            onClick={displayResult}\n          >\n            Search\n          </Button>\n        </div>\n      </div>\n      {searchType == \"movie\" && movieResults ? (\n        <div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2 className=\"text-light\">Movies: </h2>\n            </div>\n          </div>\n          <div className=\"row mb-5 pb-5\">\n            <Container\n              sx={{ bgcolor: \"secondary.grey\" }}\n              className=\" mb-5 d-flex gap-5 p-3 rounded\"\n              style={{\n                maxWidth: \"100vw\",\n                overflow: \"hidden\",\n                overflow: \"auto\",\n              }}\n            >\n              {data != undefined && data.splice(0, 5).length > 0 ? (\n                data.map((d) => (\n                  <Link\n                    className=\"rounded\"\n                    key={d.imdbID}\n                    href={`/movie/${d.imdbID}`}\n                  >\n                    <img\n                      key={d.imdbID}\n                      src={d.Poster}\n                      alt={d.Title}\n                      width={250}\n                      height={400}\n                    />\n                  </Link>\n                ))\n              ) : (\n                <></>\n              )}\n            </Container>\n          </div>\n        </div>\n      ) : null}\n\n      {searchType == \"user\" && data!= undefined ? (\n        <div className=\"col-lg-3\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2 className=\"text-light\">Users: </h2>\n            </div>\n          </div>\n          <div className=\"row mb-5 pb-5\">\n            <div\n              className=\" mb-5  bg-dark rounded \"\n              style={{\n                maxWidth: \"100vw\",\n                overflow: \"hidden\",\n                overflow: \"auto\",\n              }}\n            >\n              <h2 className=\"text-light\">@{data.username}</h2>\n              <div className=\"col-4 d-flex flex-column pb-2\">\n                <d className=\"col-3 d-flex gap-1\">\n                  <p className=\"text-light\">{data.first_name}</p>\n                  <p className=\"text-light\">{data.last_name}</p>\n                </d>\n                <Button\n                  onClick={followFriend}\n                  sx={{ bgcolor: \"primary.main\" }}\n                  color=\"secondary\"\n                >\n                  Follow\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default MovieSearch;\n","/workspace/good-movies-client/good-movies/pages/profile.jsx",["151"],[],"import useUser from \"../hooks/useUser\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\";\nimport FollowCard from \"../components/follows/FollowCard\";\nimport { Container, Typography } from \"@mui/material\";\n\nfunction Profile() {\n  let user = useUser();\n  const url = `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/getUserLikedMovies/${user.id}/`;\n  const following = `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/follow/${user.id}/${user.username}/`;\n  const watchUrl = `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/getUserWatchedMovies/${user.id}/`;\n\n  const [data, setData] = useState([]);\n  const [followData, setFollowData] = useState([]);\n  const [watched, setWatched] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const config = { headers: { Authorization: `Bearer ${token}` } };\n\n    const getData = async () => {\n      const request = await axios.get(url, config);\n      const response = request.data;\n      setData(response);\n    };\n    const getFollowing = async () => {\n      const request = await axios.get(following, config);\n      const response = request.data;\n      setFollowData(response);\n    };\n\n    const getWatched = async () => {\n      const request = await axios.get(watchUrl, config);\n      const response = request.data;\n      setWatched(response);\n    };\n\n    const getAllUserData = () => {\n      getData();\n      getFollowing();\n      getWatched();\n    };\n    user.id != undefined ? getAllUserData() : null;\n  }, [user]);\n\n  const deleteLikedMovie = async (imdbId) => {\n    await axios.delete(\n      `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/addLikedList/${user.id}/${imdbId}/`\n    );\n    const request = await axios.get(url);\n    const response = request;\n    setData(response.data);\n  };\n\n  const deleteWatchedMovie = async (imdbId) => {\n    await axios.delete(\n      `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/addWatchedList/${user.id}/${imdbId}/`\n    );\n    const request = await axios.get(watchUrl);\n    const response = request;\n    setWatched(response.data);\n  };\n  const deletedFriend = async (userName) => {\n    await axios.delete();\n    const request = await axios.get(`https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/follow/${user.id}/${user.username}/`);\n    const response = request;\n    setFollowData(response.data);\n  };\n  return (\n    <div className=\"container mt-3\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\" mb-3 bg-primary rounded-3\">\n            <div className=\"container-fluid py-3\">\n              <h1 className=\"display-5 fw-bold text-light\">\n                @{user.username ? user.username : null}\n              </h1>\n              <div className=\"d-flex flex-md-column gap-2\">\n                <h6 className=\"text-light\">\n                  {\" \"}\n                   Liked: <strong>{data.length}</strong>\n                </h6>\n                <h6 className=\"text-light\">\n                  {\" \"}\n                   Watched: <strong>{watched.length}</strong>\n                </h6>\n                <h6 className=\"text-light\">\n                  {\" \"}\n                   Following: <strong>{followData.length}</strong>\n                </h6>\n              </div>\n              <Link href=\"movie/search\">\n                <Button sx={{ bgcolor: \"primary.main\" }} color=\"secondary\">\n                  Search Movies\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <Container sx={{ bgcolor: \"secondary.grey\" }}>\n          <Typography color=\"secondary.main\" variant={\"h5\"}>\n            Liked Movies:{\" \"}\n          </Typography>\n        </Container>\n        <Container\n          className=\" d-flex gap-3  mb-3 py-2 \"\n          sx={{ bgcolor: \"secondary.grey\" }}\n          style={{\n            maxHeight: \"40rem\",\n            overflow: \"hidden\",\n            overflow: \"auto\",\n          }}\n        >\n          {Array.isArray(data) &&\n            data.map((m) => (\n              <div key={m.imdbId} className=\"col d-flex flex-column\">\n                <div>\n                  <Button\n                    sx={{\n                      marginBottom: -4.5,\n                      paddingLeft: 17.5,\n                      paddingRight: 0,\n                    }}\n                    varient=\"text\"\n                    color=\"alert\"\n                    size=\"large\"\n                    onClick={() => {\n                      deleteLikedMovie(m.imdbId);\n                    }}\n                    className=\"btn-alert\"\n                  >\n                    x\n                  </Button>\n                  <Link\n                    style={{ textDecoration: \"none\" }}\n                    href={`/movie/${m.imdbId}`}\n                    key={m.imdbId + \"m\"}\n                  >\n                    <div className=\"d-flex text-center\">\n                      <Image\n                        key={m.imdbId + \"i\"}\n                        src={m.poster}\n                        alt=\"\"\n                        height={200}\n                        width={150}\n                      />\n                      <div className=\"d-flex  flex-column align-items-center\"></div>\n                    </div>\n                  </Link>\n                </div>\n              </div>\n            ))}\n        </Container>\n\n        <Container sx={{ bgcolor: \"secondary.grey\" }}>\n          <Typography color=\"secondary.main\" variant={\"h5\"}>\n            Watched Movies:{\" \"}\n          </Typography>\n        </Container>\n        <Container\n          className=\" d-flex gap-3  mb-3 py-2 \"\n          sx={{ bgcolor: \"secondary.grey\" }}\n          style={{\n            maxHeight: \"40rem\",\n            overflow: \"hidden\",\n            overflow: \"auto\",\n          }}\n        >\n          {Array.isArray(watched) &&\n            watched.map((m) => (\n              <div key={m.imdbId} className=\"col d-flex flex-column\">\n                <div>\n                  <Button\n                    sx={{\n                      marginBottom: -4.5,\n                      paddingLeft: 17.5,\n                      paddingRight: 0,\n                    }}\n                    varient=\"text\"\n                    color=\"alert\"\n                    size=\"large\"\n                    onClick={() => {\n                      deleteWatchedMovie(m.imdbId);\n                    }}\n                    className=\"btn-alert\"\n                    \n                  >\n                    x\n                  </Button>\n                  <Link\n                    style={{ textDecoration: \"none\" }}\n                    href={`/movie/${m.imdbId}`}\n                    key={m.imdbId + \"m\"}\n                  >\n                    <div className=\"d-flex text-center\">\n                      <Image\n                        key={m.imdbId + \"i\"}\n                        src={m.poster}\n                        alt=\"\"\n                        height={200}\n                        width={150}\n                      />\n                      <div className=\"d-flex  flex-column align-items-center\"></div>\n                    </div>\n                  </Link>\n                </div>\n              </div>\n            ))}\n        </Container>\n      </div>\n      <div className=\"row pb-5 mb-5\">\n        <div className=\"col px-xl-5  d-flex flex-column justify-content-center\">\n          <Container sx={{ bgcolor: \"secondary.grey\" }} className=\"rounded\">\n            <Typography color=\"secondary.main\" variant={\"h5\"}>\n              Following:{\" \"}\n            </Typography>\n          </Container>\n\n          <div className=\"col mt-2 px-xl-5 d-flex flex-wrap gap-3\">\n            {followData.map((f) => (\n              <div key={f.id} className=\"col\">\n                <FollowCard onClick={() => {deletedFriend(f.username)}} userName={f.username} userId={f.id} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Profile;\n","/workspace/good-movies-client/good-movies/pages/register.jsx",[],[],"/workspace/good-movies-client/good-movies/pages/user/[id].jsx",["152"],[],"import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Container, Typography, Box } from \"@mui/material\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\n\nfunction FollowingProfile() {\n  const router = useRouter();\n  const [data, setData] = useState([]);\n  const [watched, setWatched] = useState([]);\n  const [userData, setUserData] = useState([]);\n\n  const { id } = router.query;\n  const BASE_URL = `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/following/${id}/`;\n  const url = `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/getUserLikedMovies/${id}/`;\n  const watchUrl = `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/getUserWatchedMovies/${id}/`;\n\n  useEffect(() => {\n    const getData = async () => {\n      const request = await axios.get(url);\n      const response = request.data;\n      setData(response);\n    };\n    const getUserData = async () => {\n      const request = await axios.get(BASE_URL);\n      const response = request.data;\n      setUserData(response);\n    };\n    const getWatchedData = async () => {\n      const request = await axios.get(watchUrl);\n      const response = request.data;\n      setWatched(response);\n    };\n\n    getUserData();\n    getData();\n    getWatchedData();\n  }, []);\n\n  return (\n    <Container\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Box sx={{ paddingBottom: 3 }}>\n        <Typography variant=\"h2\" color=\"secondary\">\n          @{userData.username}\n        </Typography>\n        <Typography variant=\"h6\" color=\"secondary\">\n          MOVIES LIKED:{\" \"}\n        </Typography>\n        {data.map((d) => (\n          <Link href={`/movie/${d.imdbId}`} key={d.id + \"l\"}>\n            <Image\n              src={d.poster}\n              key={d.id}\n              alt={d.title}\n              height={200}\n              width={150}\n            />\n          </Link>\n        ))}\n      </Box>\n\n      <Box sx={{ paddingBottom: 3 }}>\n        <Typography variant=\"h6\" color=\"secondary\">\n          WATCHED\n        </Typography>\n        {watched.map((w) => (\n          <Link href={`/movie/${w.imdbId}`} key={w.id + \"w\"}>\n            <Image\n              src={w.poster}\n              key={w.id}\n              alt={w.title}\n              height={200}\n              width={150}\n            />\n          </Link>\n        ))}\n      </Box>\n    </Container>\n  );\n}\nexport default FollowingProfile;\n","/workspace/good-movies-client/good-movies/components/about/Hero.jsx",["153"],[],"import Link from \"next/link\";\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { Typography } from \"@mui/material\";\n\nfunction Hero() {\n\n  return (\n    <div className=\"jumbotron pt-3  p-md-5 text-white rounded d-flex justify-content-center\">\n      <div className=\"col-md-6 pb-0 text-center\">\n      <img src='https://freesvg.org/img/Movie-Clapperboard.png' width={200} height={200} alt='movie'></img>\n\n        <Typography variant='h2' sx={{ fontWeight: 'bold' }}>GOOD MOVIES</Typography>\n        <div className=\"container\">\n          <Typography>Track films you’ve watched.</Typography>\n          <Typography>Save those you want to see.</Typography>\n          <Typography>Tell your friends what’s good.</Typography>\n        </div>\n        <div className=\"col pb-3 pt-3\">\n          <Stack spacing={2} direction=\"column\">\n            <Link style={{ textDecoration: 'none' }} href='/register'><Button color=\"success\" variant=\"contained\">GET STARTED — ITS FREE!</Button></Link>\n            <Link style={{ textDecoration: 'none' }} href=\"/login\"><Button variant=\"contained\">Login</Button></Link>\n          </Stack>\n        </div>\n\n        <div className=\"col-md-6\"></div>\n      </div>\n    </div>\n\n  );\n}\nexport default Hero;\n","/workspace/good-movies-client/good-movies/components/about/Home.jsx",[],[],"/workspace/good-movies-client/good-movies/components/follows/FollowCard.jsx",[],[],"/workspace/good-movies-client/good-movies/components/login/GoogleLogin.jsx",["154"],[],"import { useEffect, useState } from \"react\"\nimport jwt_decode from \"jwt-decode\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport { useRouter } from 'next/router'\nfunction GoogleLogin() {\n    const route = useRouter()\n    const [user, setUser] = useState({})\n    const [firstName, setFirstName] = useLocalStorage('firstName', 'Friend')\n    useEffect(() => {\n        /* global google*/\n        const handleCallbackResponse = (response) => {\n            localStorage.setItem('token', response.credential)\n            let userObject = jwt_decode(response.credential);\n            setUser(userObject)\n            console.log(user)\n            setFirstName(user.given_name)\n\n            route.push('/profile')\n\n        }\n\n        google.accounts.id.initialize({\n            client_id: \"483637557491-jql4fnuhlja8av3gqih2j5iof8eov6fq.apps.googleusercontent.com\",\n            callback: handleCallbackResponse\n        });\n        google.accounts.id.renderButton(\n            document.getElementById(\"signInDiv\"),\n            { theme: \"outline\", size: \"large\" }\n        )\n    }, [])\n\n\n    return (\n        <div id=\"signInDiv\"></div>\n    )\n}\n\nexport default GoogleLogin;","/workspace/good-movies-client/good-movies/components/login/LoginForm.jsx",[],[],"/workspace/good-movies-client/good-movies/components/login/SignIn.jsx",[],[],"/workspace/good-movies-client/good-movies/components/modals/LoginModal.jsx",[],[],"/workspace/good-movies-client/good-movies/components/movies/ButtonGroup.jsx",["155"],[],"import axios from \"axios\";\nimport Link from \"next/link\";\nimport useUser from \"../../hooks/useUser\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\n\nfunction ButtonGroup({ mData }) {\n\n  let token = ''\n  useEffect(() => {\n    token = localStorage.getItem('token')\n  },[])\n\n  const user = useUser();\n  const url = \"https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/movies/\";\n\n  const config = {\n    title: mData.Title,\n    plot: mData.Plot,\n    cast: mData.Actors,\n    poster: mData.Poster,\n    rated: mData.Rated,\n    director: mData.Director,\n    date_released: mData.Released,\n    imdbId: mData.imdbID,\n    year: mData.Year,\n    //roten_score:mData.Ratings.toString(),\n    run_time: mData.Runtime,\n  };\n\n\n  const addMovieToDb = async () => {\n    const headers = { Authorization: `Bearer ${token}` } \n    await axios.post(url, config, headers )\n    .catch(function (err){return});\n  };\n  const likeMovie = async () => {\n    await addMovieToDb();\n    let request = axios.post(\n      `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/addLikedList/${user.id}/${mData.imdbID}/`\n    );\n\n  };\n  const  watchedMovie = async () => {\n    await addMovieToDb();\n    let request = axios.post(\n      `https://8000-alexgalvan0-goodmoviesa-b4acnd9aawy.ws-us78.gitpod.io/api/addWatchedList/${user.id}/${mData.imdbID}/`\n    );\n\n  }\n\n  return (\n    <div\n      className=\"btn-group bg-dark mb-5\"\n      role=\"group\"\n      aria-label=\"Basic example\"\n    >\n      <Link href=\"/profile\">\n        <div className=\"d-flex\">\n        <Button size='small' variant='contained' onClick={likeMovie} sx={{bgcolor:'secondary'}} >\n          Like\n        </Button>\n        <Button size='small' variant='contained' onClick={watchedMovie} sx={{bgcolor:'secondary'}} >\n          Watched\n        </Button>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default ButtonGroup;\n","/workspace/good-movies-client/good-movies/components/movies/MovieCard.jsx",["156"],[],"function MovieCard() {\n    return(\n        <div className=\"card mb-3\" style=\"max-width: 540px;\">\n            <div className=\"row no-gutters\">\n                <div className=\"col-md-4\">\n                    <img src=\"https://images.unsplash.com/photo-1485846234645-a62644f84728?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2318&q=80\" alt=\"...\"/>\n                </div>\n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Card title</h5>\n                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard;","/workspace/good-movies-client/good-movies/components/nav/BottomNav.jsx",["157"],[],"import * as React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Box from \"@mui/material/Box\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport FloatingActionButtons from \"./FloatingActionButton\";\nimport { useEffect, useState } from \"react\";\n\nexport default function SimpleBottomNavigation() {\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    setUser(localStorage.getItem(\"token\"));\n  });\n\n  const [value, setValue] = React.useState(0);\n  const router = useRouter();\n  const goToProfile = (e) => {\n    e.preventDefault();\n    router.push(\"/profile\");\n  };\n  const goToSearchMovie = (e) => {\n    e.preventDefault();\n    router.push(\"/movie/search\");\n  };\n  const goHome = (e) => {\n    e.preventDefault();\n    router.push(\"/\");\n  };\n  let login = (e) => {\n    router.push(\"/login\");\n  };\n\n  let logout = (e) => {\n    localStorage.clear(\"token\");\n    login();\n  };\n\n  return (\n    <Box style={{ position: \"fixed\", bottom: \"0\", width: \"100vw\" }}>\n      <div\n        className=\"\"\n        style={{ position: \"fixed\", right: \"20px\", bottom: \"75px\" }}\n      >\n        <FloatingActionButtons />\n      </div>\n      <BottomNavigation\n        sx={{ bgcolor: \"secondary.grey\"}}\n        \n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n      >\n        <BottomNavigationAction\n          sx={{ bgcolor: \"primary\" }}\n          onClick={goHome}\n          icon={<HomeIcon color=\"secondary\" />}\n        />\n        {user ? (\n          <BottomNavigationAction\n            onClick={goToProfile}\n            label=\"PROFILE\"\n            icon={<AccountBoxIcon color=\"secondary\" />}\n          />\n        ) : null}\n        {user ? (\n          <BottomNavigationAction\n            onClick={logout}\n            label=\"LOGOUT\"\n            icon={<LogoutIcon color=\"secondary\" />}\n          />\n        ) : (\n          <BottomNavigationAction\n            onClick={login}\n            label=\"LOGIN\"\n            icon={<LoginIcon color=\"secondary\" />}\n          />\n        )}\n      </BottomNavigation>\n    </Box>\n  );\n}\n","/workspace/good-movies-client/good-movies/components/nav/FloatingActionButton.jsx",[],[],"/workspace/good-movies-client/good-movies/components/nav/ImageAvatars.jsx",[],[],"/workspace/good-movies-client/good-movies/components/nav/MenuAppBar.jsx",["158"],[],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Container } from \"@mui/material\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nexport default function MenuAppBar() {\n  const router = useRouter();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const goToProfile = (e) => {\n    e.preventDefault();\n    router.push(\"/profile\");\n  };\n  const goHome = (e) => {\n    e.preventDefault();\n    router.push(\"/\");\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" sx={{ bgcolor: \"primary\" }}>\n        <Toolbar sx={{paddingBottom:2}}>\n          <Link href=\"/\">\n            <Box sx={{ paddingRight: 1 }}>\n              <img\n                src=\"https://freesvg.org/img/Movie-Clapperboard.png\"\n                width={25}\n                height={25}\n                alt=\"movie\"\n              ></img>\n            </Box>\n          </Link>\n          <Typography\n            onClick={goHome}\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1, fontWeight: \"bold\" }}\n          >\n            GOOD MOVIES\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={(handleClose, goToProfile)}>\n                  Profile\n                </MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","/workspace/good-movies-client/good-movies/components/nav/Nav.jsx",["159"],[],"import Link from 'next/link'\nimport { useState, useEffect } from 'react';\nimport style from './Nav.module.scss'\n\nfunction Nav() {\n\n  const [user, setUser] = useState('')\n  useEffect(() => {setUser(localStorage.getItem('token'))})\n\n  // let user;\n  // if (typeof window !== \"undefined\") {\n  //   user = localStorage.getItem('token')\n  //   }\n  let logout = () => {\n    localStorage.clear('token')\n  }\n\n  return (\n    <div className={style.navbar}>\n    <header className=\"p-3 text-bg-dark\">\n      <div className=\"container\">\n        <div className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\n          <Link href=\"/\" className=\"d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none\">\n          </Link>\n\n          <ul className=\"nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0\">\n            <li><Link href=\"/\" className=\"nav-link px-2 text-secondary\">Home</Link></li>\n            <li><Link href=\"/movie/search\" className=\"nav-link px-2 text-light\">Search</Link></li>\n            <li><Link href=\"/\" className=\"nav-link px-2 text-white\">FAQs</Link></li>\n            <li><Link href=\"/about\" className=\"nav-link px-2 text-white\">About</Link></li>\n          </ul>\n\n          <div className=\"text-end\">\n\n            {user ? <Link href='/profile'><button type=\"button\" className=\"btn btn-alert text-light me-2\">Profile</button></Link> :\n              <Link href='/register'><button type=\"button\" className=\"btn btn-alert text-light\">Sign-up</button></Link>}\n\n            {user ? <Link href='/'><button onClick={logout} type=\"button\" className=\"btn btn-primary text-light me-2\">Logout</button></Link> :\n              <Link href='/login'><button type=\"button\" className=\"btn btn-primary text-light me-2\">Login</button></Link>}\n\n\n          </div>\n        </div>\n      </div>\n    </header>\n    </div>\n  )\n}\n\nexport default Nav;","/workspace/good-movies-client/good-movies/components/nav/SnackBar.jsx",[],[],"/workspace/good-movies-client/good-movies/components/nav/SnackBarRegister.jsx",[],[],"/workspace/good-movies-client/good-movies/components/register/RegisterForm.jsx",[],[],"/workspace/good-movies-client/good-movies/components/search/Toggle.jsx",[],[],"/workspace/good-movies-client/good-movies/pages/_app.js",[],[],"/workspace/good-movies-client/good-movies/pages/index.js",[],[],{"ruleId":"160","severity":1,"message":"161","line":29,"column":8,"nodeType":"162","endLine":29,"endColumn":10,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":39,"column":25,"nodeType":"166","endLine":39,"endColumn":84},{"ruleId":"164","severity":1,"message":"165","line":121,"column":21,"nodeType":"166","endLine":127,"endColumn":23},{"ruleId":"160","severity":1,"message":"167","line":47,"column":6,"nodeType":"162","endLine":47,"endColumn":12,"suggestions":"168"},{"ruleId":"160","severity":1,"message":"169","line":39,"column":6,"nodeType":"162","endLine":39,"endColumn":8,"suggestions":"170"},{"ruleId":"164","severity":1,"message":"165","line":11,"column":7,"nodeType":"166","endLine":11,"endColumn":102},{"ruleId":"160","severity":1,"message":"171","line":30,"column":8,"nodeType":"162","endLine":30,"endColumn":10,"suggestions":"172"},{"ruleId":"160","severity":1,"message":"173","line":11,"column":13,"nodeType":"174","endLine":11,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":6,"column":21,"nodeType":"166","endLine":6,"endColumn":202},{"ruleId":"160","severity":1,"message":"175","line":16,"column":3,"nodeType":"176","endLine":16,"endColumn":12,"suggestions":"177"},{"ruleId":"164","severity":1,"message":"165","line":40,"column":15,"nodeType":"166","endLine":45,"endColumn":16},{"ruleId":"160","severity":1,"message":"175","line":8,"column":3,"nodeType":"176","endLine":8,"endColumn":12,"suggestions":"178"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'API_KEY' and 'imdbID'. Either include them or remove the dependency array.","ArrayExpression",["179"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has missing dependencies: 'following', 'url', and 'watchUrl'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'BASE_URL', 'url', and 'watchUrl'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'route', 'setFirstName', and 'user'. Either include them or remove the dependency array.",["182"],"Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["183"],["184"],{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},"Update the dependencies array to be: [API_KEY, imdbID]",{"range":"196","text":"197"},"Update the dependencies array to be: [following, url, user, watchUrl]",{"range":"198","text":"199"},"Update the dependencies array to be: [BASE_URL, url, watchUrl]",{"range":"200","text":"201"},"Update the dependencies array to be: [route, setFirstName, user]",{"range":"202","text":"203"},"Add dependencies array: []",{"range":"204","text":"205"},{"range":"206","text":"205"},[727,729],"[API_KEY, imdbID]",[1685,1691],"[following, url, user, watchUrl]",[1359,1361],"[BASE_URL, url, watchUrl]",[1086,1088],"[route, setFirstName, user]",[779,779],", []",[228,228]]